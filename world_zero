local Config = {
    WindowName = "V.G Hub",
	Color = Color3.fromRGB(255,128,64),
	Keybind = Enum.KeyCode.RightControl
}
repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)


local Name = "World Zero.json"

Des = {}
if makefolder then
    makefolder("V.G Hub")
end

local Settings

if
    not pcall(
        function()
            readfile("V.G Hub//" .. Name)
        end
    )
 then
    writefile("V.G Hub//" .. Name, game:GetService("HttpService"):JSONEncode(Des))
end

Settings = game:GetService("HttpService"):JSONDecode(readfile("V.G Hub//" .. Name))

local function Save()
    writefile("V.G Hub//" .. Name, game:GetService("HttpService"):JSONEncode(Settings))
end

local function Float(v)
    if v:FindFirstChild("BodyForce") then
        return
    end
    local BodyForce = Instance.new("BodyForce")
    BodyForce.Force = v:GetMass() * Vector3.new(0, workspace.Gravity, 0)
    BodyForce.Parent = v
end

if Settings.Speed1 == nil then
    Settings.Speed1 = 0.5
end 
local wait = task.wait
--  i stole this from ICEE#0004 UwU
-- jk check credits
local Classes = {
    ["Swordmaster"] = {
        "Swordmaster1",
        "Swordmaster2",
        "Swordmaster3",
        "Swordmaster4",
        "Swordmaster5",
        "Swordmaster6",
        "CrescentStrike1",
        "CrescentStrike2",
        "CrescentStrike3",
        "Leap"
    },
    ["Mage"] = {
        "Mage1",
        "ArcaneBlastAOE",
        "ArcaneBlast",
        "ArcaneWave1",
        "ArcaneWave2",
        "ArcaneWave3",
        "ArcaneWave4",
        "ArcaneWave5",
        "ArcaneWave6",
        "ArcaneWave7",
        "ArcaneWave8",
        "ArcaneWave9"
    },
    ["Defender"] = {
        "Defender1",
        "Defender2",
        "Defender3",
        "Defender4",
        "Defender5",
        "Groundbreaker",
        "Spin1",
        "Spin2",
        "Spin3",
        "Spin4",
        "Spin5"
    },
    ["DualWielder"] = {
        "DualWield1",
        "DualWield2",
        "DualWield3",
        "DualWield4",
        "DualWield5",
        "DualWield6",
        "DualWield7",
        "DualWield8",
        "DualWield9",
        "DualWield10",
        "DashStrike",
        "CrossSlash1",
        "CrossSlash2",
        "CrossSlash3",
        "CrossSlash4"
    },
    ["Guardian"] = {
        "Guardian1",
        "Guardian2",
        "Guardian3",
        "Guardian4",
        "SlashFury1",
        "SlashFury2",
        "SlashFury3",
        "SlashFury4",
        "SlashFury5",
        "SlashFury6",
        "SlashFury7",
        "SlashFury8",
        "SlashFury9",
        "SlashFury10",
        "SlashFury11",
        "SlashFury12",
        "SlashFury13",
        "RockSpikes1",
        "RockSpikes2",
        "RockSpikes3"
    },
    ["IcefireMage"] = {
        "IcefireMage1",
        "IcySpikes1",
        "IcySpikes2",
        "IcySpikes3",
        "IcySpikes4",
        "IcefireMageFireballBlast",
        "IcefireMageFireball",
        "LightningStrike1",
        "LightningStrike2",
        "LightningStrike3",
        "LightningStrike4",
        "LightningStrike5",
        "IcefireMageUltimateFrost",
        "IcefireMageUltimateMeteor1"
    },
    ["Berserker"] = {
        "Berserker1",
        "Berserker2",
        "Berserker3",
        "Berserker4",
        "Berserker5",
        "Berserker6",
        "AggroSlam",
        "GigaSpin1",
        "GigaSpin2",
        "GigaSpin3",
        "GigaSpin4",
        "GigaSpin5",
        "GigaSpin6",
        "GigaSpin7",
        "GigaSpin8",
        "Fissure1",
        "Fissure2",
        "FissureErupt1",
        "FissureErupt2",
        "FissureErupt3",
        "FissureErupt4",
        "FissureErupt5"
    },
    ["Paladin"] = {
        "Paladin1",
        "Paladin2",
        "Paladin3",
        "Paladin4",
        "LightThrust1",
        "LightThrust2",
        "LightPaladin1",
        "LightPaladin2"
    },
    ["MageOfLight"] = {"MageOfLight", "MageOfLightBlast"},
    ["Demon"] = {
        "Demon1",
        "Demon4",
        "Demon7",
        "Demon10",
        "Demon13",
        "Demon16",
        "Demon19",
        "Demon22",
        "Demon25",
        "DemonDPS1",
        "DemonDPS2",
        "DemonDPS3",
        "DemonDPS4",
        "DemonDPS5",
        "DemonDPS6",
        "DemonDPS7",
        "DemonDPS8",
        "DemonDPS9",
        "ScytheThrowDPS1",
        "ScytheThrowDPS2",
        "ScytheThrowDPS3",
        "DemonLifeStealDPS",
        "DemonSoulDPS1",
        "DemonSoulDPS2",
        "DemonSoulDPS3"
    },
    ["Archer"] = {
        "SpiritBomb",
        "MortarStrike1",
        "MortarStrike2",
        "MortarStrike3",
        "MortarStrike4",
        "MortarStrike5",
        "PiercingArrow1"
    },
    ["Dragoon"] = {
        "Dragoon1",
        "Dragoon2",
        "Dragoon3",
        "Dragoon4",
        "Dragoon5",
        "DragoonCross1",
        "DragoonCross2",
        "DragoonCross3",
        "DragoonCross4",
        "DragoonCross5",
        "DragoonCross6",
        "DragoonCross7",
        "DragoonUltimate"
    }
}

local RunService = game:GetService("RunService")
spawn(
    function()
        RunService.Stepped:connect(
            function()
                workspace.FallenPartsDestroyHeight = 0 / 0
                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 1000)
            end
        )
    end
)

local function getNearestMob()
    local TargetDistance = math.huge
    local Target
    for i, v in ipairs(game.Workspace.Mobs:GetChildren()) do
        if v.PrimaryPart and v:FindFirstChild("HealthProperties") and v.HealthProperties.Health.Value ~= 0 then
            local Mag =
                (v.PrimaryPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if Mag < TargetDistance then
                TargetDistance = Mag
                Target = v
            end
        end
    end
    return Target
end

for i, v in next, getconnections(
    require(game:GetService("ReplicatedStorage").Shared.Combat):GetAttackEvent().OnClientEvent
) do
    v:Disable()
end
if not game.Workspace:FindFirstChild("Poop") then
    local Poop = Instance.new("Part")
    Poop.Name = "Poop"
    Poop.Parent = Workspace
    Poop.Anchored = true 
    Poop.Position = Vector3.new(9e9,0,0)
    Poop.Transparency = 1
end 

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/test"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("World // Zero")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("")
local Section2 = Tab1:CreateSection("")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")

local Toggle1 = Section1:CreateToggle("Kill Aura", Settings.Doo, function(State)
Settings.Doo = State
spawn(function()
while wait() and Settings.Doo do
    pcall(
        function()
            local Mob = getNearestMob()
            if (Mob and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.PrimaryPart) then
                for i, v in next, Classes[
                    game:GetService("ReplicatedStorage").Profiles[game.Players.LocalPlayer.Name].Class.Value
                ] do
                    game:GetService("ReplicatedStorage").Shared.Combat.Attack:FireServer(
                        v,
                        getNearestMob().PrimaryPart.Position,
                        getNearestMob().PrimaryPart.Position
                    )
                    wait(Settings.Speed1)
                end
            end
        end
    )
end
end)
end)

local Slider2 = Section1:CreateSlider("KillAura Attack Time", 0,5,Settings.Speed,false, function(Value)
 Settings.Speed1  = Value
end)
local Toggle1 = Section1:CreateToggle("Autofarm", Settings.AutoFarm, function(State)
Settings.AutoFarm = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.AutoFarm then
            game.Workspace:FindFirstChild("Poop").CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,-3,0))
            
            for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end 
            end 
        end
    end
)
spawn(function()
while wait() and Settings.AutoFarm do
    pcall(
        function()
            local Mob = getNearestMob()
            if (Mob and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.PrimaryPart) then
                for i, v in next, Classes[
                    game:GetService("ReplicatedStorage").Profiles[game.Players.LocalPlayer.Name].Class.Value
                ] do
                    if
                        (game.Players.LocalPlayer.Character.HumanoidRootPart.Position -
                            getNearestMob().PrimaryPart.Position).Magnitude < 18 and wait(Settings.Speed1)
                     then
                        game:GetService("ReplicatedStorage").Shared.Combat.Attack:FireServer(
                        v,
                        getNearestMob().PrimaryPart.Position,
                        getNearestMob().PrimaryPart.Position
                    )
                    end
                    
                end
            end
        end
    )
end
end)

spawn(
    function()
        while wait() and Settings.AutoFarm do
            pcall(
                function()
                    Settings.Speed2 = 50
                    local Time =
                        (getNearestMob().PrimaryPart.Position + Vector3.new(0, 0, 3) -
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude / Settings.Speed2
                    local Info = TweenInfo.new(Time, Enum.EasingStyle.Linear)
                    local Tween =
                        game:GetService("TweenService"):Create(
                        game.Players.LocalPlayer.Character.HumanoidRootPart,
                        Info,
                        {CFrame = CFrame.new(getNearestMob().PrimaryPart.Position + Vector3.new(0, -15, 0))
                            
                        }
                    )
                    Tween:Play()
                end
            )
        end
    end
)

end)
local Toggle1 = Section1:CreateToggle("Auto Use Skills", Settings.AutoFarm, function(State)
Settings.AutoSkills = State
spawn(
    function()
        while Settings.AutoSkills do
            for i, v in pairs({"E", "R", "F", "X"}) do
                wait(0.1)
                game:GetService("VirtualInputManager"):SendKeyEvent(true, v, false, game)
            end
        end
    end
)
end)

local Toggle1 = Section1:CreateToggle("Auto Trigger CutSences", Settings.Tigger, function(State)
Settings.Tigger = State
spawn(function()
while wait(1) and Settings.Tigger do
    pcall(
        function()
            for _, v in pairs(game:GetService("Workspace").MissionObjects:GetDescendants()) do
                if v:IsA("BasePart") and v:FindFirstChildWhichIsA("TouchTransmitter") and not v.Parent.Parent.Name:find("Damage") then wait()
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0) --0 is touch
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "G", false, game)

                end
            end
        end
    )
end
end)
end)

local Toggle1 = Section1:CreateToggle("Auto Bring Items", Settings.Doo1, function(State)
Settings.Doo1 = State
spawn(function()
while Settings.Doo1 do
    wait(1)
    pcall(
        function()
            for i, v in pairs(game:GetService("Workspace").Coins:GetChildren()) do
                if v:IsA("BasePart") then
                    v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    v.CanCollide = false
                end
            end
        end
    )
end

end)
end)

Food = {"Strawberry",'Sundae','CakeSlice','Doughnut'}
local Toggle1 = Section1:CreateToggle("Auto Feed Pet", Settings.Doo3, function(State)
Settings.Doo3 = State
spawn(function()
while wait() and Settings.Doo3 do
    pcall(
        function()
            wait(1)
            game:GetService("ReplicatedStorage").Shared.Pets.FeedPet:FireServer(
                game:GetService("ReplicatedStorage").Profiles[game.Players.LocalPlayer.Name].Inventory.Items[Food],
                true
            )
        end
    )
end
end)

end)

local Dropdown3 = Section1:CreateDropdown("Food", Food, function(Sting)
    Settings.Food = String
end)


local Toggle1 = Section2:CreateToggle("Enable WalkSpeed/JumpPower", Settings.Go, function(State)
Settings.Go = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Go then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = Settings.WalkSpeed
       	    if game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').UseJumpPower then
			game.Players.LocalPlayer.Character:WaitForChild('Humanoid').JumpPower = Settings.JumpPower
		    else
			game.Players.LocalPlayer.Character:WaitForChild('Humanoid').JumpHeight  = Settings.JumpPower
			end 
            if not game:GetService("UserInputService").WindowFocusReleased then
                setfpscap(Settings.Fps)
            end
        end
    end
)

end)

local TextBox1 = Section2:CreateTextBox("Fps Cap", "Only numbers", true, function(Value)
    Settings.Fps = Value
end)

local TextBox1 = Section2:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    Settings.WalkSpeed = Value
end)
local TextBox1 = Section2:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    Settings.JumpPower = Value
end)



local Toggle1 = Section2:CreateToggle("Infinite Jump", Settings.InfiniteJump, function(State)
Settings.InfiniteJump = State
game:GetService("UserInputService").JumpRequest:connect(
    function()
        if Settings.InfiniteJump then
            game:GetService "Players".LocalPlayer.Character:FindFirstChildOfClass "Humanoid":ChangeState("Jumping")
        end
    end
)
end)

local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/Karrot-Esp"))()



local Toggle1 = Section1:CreateToggle("Enable Esp", Settings.Esp, function(State)
    Settings.Esp = State
    ESP:Toggle(Settings.Esp)
end)

local Toggle1 = Section1:CreateToggle("PLayer Esp", Settings.PlayerEsp, function(State)
    Settings.PlayerEsp = State
    ESP.Players = Settings.PlayerEsp
end)
local Toggle1 = Section1:CreateToggle("Tracers Esp", Settings.Tracers, function(State)
    Settings.Tracers = State
    ESP.Tracers = Settings.Tracers
end)
local Toggle1 = Section1:CreateToggle("Name Esp", Settings.EspNames, function(State)
    ESP.Names = Settings.EspNames
    Settings.EspNames = State
end)
local Toggle1 = Section1:CreateToggle("Boxes Esp", Settings.Boxes, function(State)
    Settings.Boxes = State
    ESP.Boxes = Settings.Boxes
end)

local Toggle1 = Section2:CreateToggle("Invisicam", Settings.Sorry, function(State)
Settings.Sorry = State
if Settings.Sorry then
    game:GetService("Players").LocalPlayer.DevCameraOcclusionMode = "Invisicam"
else
    game:GetService("Players").LocalPlayer.DevCameraOcclusionMode = "Zoom"
end
end)

local Toggle1 = Section2:CreateToggle("N Noclip", Settings.Sex1, function(State)
noclips = false
Settings.Sex1 = State
game.Players.LocalPlayer:GetMouse().KeyDown:connect(
    function(v)
        if v == "n" then
            if Settings.Sex1 then
                noclips = not noclips
                for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("BasePart") then
                        pcall(function()
                        v.CanCollide = false
                        end)
                    end
                end
            end
        end
    end
)
game:GetService("RunService").Stepped:connect(
    function()
        if noclips then
            for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if v:IsA("BasePart") then
                    pcall(function()
                    v.CanCollide = false
                    end)
                end
            end
        end
    end
)

end)

local Toggle1 = Section2:CreateToggle("G Noclip", Settings.Sex, function(State)
Settings.Sex = State
noclip = false
game:GetService("RunService").Stepped:connect(
    function()
        if noclip then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end
)
mouse = game.Players.LocalPlayer:GetMouse()
game.Players.LocalPlayer:GetMouse().KeyDown:connect(
    function(v)
        if v == "g" then
            if Settings.Sex then
                noclip = not noclip
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
            end
        end
    end
)
end)
local Toggle1 = Section2:CreateToggle("H Fly", Settings.Sex2, function(State)
Settings.Sex2 = State
local Max = 0
local Players = game.Players
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
Mouse.KeyDown:connect(
    function(k)
        if k:lower() == "h" then
            Max = Max + 1
            getgenv().Fly = false
            if Settings.Sex2 then
                local T = LP.Character.UpperTorso
                local S = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local S2 = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local SPEED = 5
                local function FLY()
                    getgenv().Fly = true
                    local BodyGyro = Instance.new("BodyGyro", T)
                    local BodyVelocity = Instance.new("BodyVelocity", T)
                    BodyGyro.P = 9e4
                    BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    BodyGyro.cframe = T.CFrame
                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                    BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
                    spawn(
                        function()
                            repeat
                                wait()
                                LP.Character.Humanoid.PlatformStand = false
                                if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
                                    SPEED = 50
                                elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
                                    SPEED = 0
                                end
                                if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
                                    BodyVelocity.velocity =
                                        ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) +
                                        ((game.Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) -
                                            game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                    S2 = {
                                        F = S.F,
                                        B = S.B,
                                        L = S.L,
                                        R = S.R
                                    }
                                elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
                                    BodyVelocity.velocity =
                                        ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) +
                                        ((game.Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) -
                                            game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                else
                                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                                end
                                BodyGyro.cframe = game.Workspace.CurrentCamera.CoordinateFrame
                            until not getgenv().Fly
                            S = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            S2 = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            SPEED = 0
                            BodyGyro:destroy()
                            BodyVelocity:destroy()
                            LP.Character.Humanoid.PlatformStand = false
                        end
                    )
                end
                Mouse.KeyDown:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 1
                        elseif k:lower() == "s" then
                            S.B = -1
                        elseif k:lower() == "a" then
                            S.L = -1
                        elseif k:lower() == "d" then
                            S.R = 1
                        end
                    end
                )
                Mouse.KeyUp:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 0
                        elseif k:lower() == "s" then
                            S.B = 0
                        elseif k:lower() == "a" then
                            S.L = 0
                        elseif k:lower() == "d" then
                            S.R = 0
                        end
                    end
                )
                FLY()
                if Max == 2 then
                    getgenv().Fly = false
                    Max = 0
                end
            end
        end
    end
)
end)
local Button1 = Section2:CreateButton("Anti Lag", function()
for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
        v.Material = Enum.Material.SmoothPlastic
        if v:IsA("Texture") then
            v:Destroy()
        end
    end
end
end)

local Button1 = Section2:CreateButton("Teleport to RandomPlayer", function()
local randomPlayer = game.Players:GetPlayers()[math.random(1, #game.Players:GetPlayers())]

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
    CFrame.new(
    Vector3.new(
        randomPlayer.Character.Head.Position.X,
        randomPlayer.Character.Head.Position.Y,
        randomPlayer.Character.Head.Position.Z
    )
)
end)
local Button1 = Section2:CreateButton("Lag Switch F3", function()
local ass = false
local bitch = settings()

game:service "UserInputService".InputEnded:connect(
    function(i)
        if i.KeyCode == Enum.KeyCode.F3 then
            ass = not ass
            bitch.Network.IncomingReplicationLag = ass and 10 or 0
        end
    end
)
 end) 
local Button1 = Section2:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end)
local Button1 = Section2:CreateButton("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer) end)

local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
Section3:CreateLabel("Credits DekuDimz#7960")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
Section3:CreateLabel("Credits Doggo")
Section3:CreateLabel("Credits Fliex")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)

-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image", {"Default","Hearts","Abstract","Hexagon","Circles","Lace With Flowers","Floral"}, function(Name)
	if Name == "Default" then
		Window:SetBackground("2151741365")
	elseif Name == "Hearts" then
		Window:SetBackground("6073763717")
	elseif Name == "Abstract" then
		Window:SetBackground("6073743871")
	elseif Name == "Hexagon" then
		Window:SetBackground("6073628839")
	elseif Name == "Circles" then
		Window:SetBackground("6071579801")
	elseif Name == "Lace With Flowers" then
		Window:SetBackground("6071575925")
	elseif Name == "Floral" then
		Window:SetBackground("5553946656")
	end
end)
Dropdown3:SetOption("Default")

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)
spawn(function()
while wait() do
Save()
end end)
