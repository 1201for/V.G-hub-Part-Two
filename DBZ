local Config = {
    WindowName = "V.G Hub",
	Color = Color3.fromRGB(255,128,64),
	Keybind = Enum.KeyCode.RightControl
}
repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

aka = {
    "Requiem Arrow",
    "Lucky Arrow"
}
local Table = {
    "Technician of Time Guldo",
    "Never Ending Battle Vegeta",
    "Preparations Made Before the Final Battle Krillin",
    "Strategy to Defeat the Emperor Vegeta",
    "Honest Admiration Super Saiyan Cabba",
    "Indomitable Sense of Justice Super Saiyan Gohan",
    "Indomitable Sense of Justice Super Saiyan Gohan",
    "Martial Mettle Goku",
    "The Trump Card Goku",
    "The Nightmare Returns Frieza",
    "Strike of Full Anger Super Saiyan Goku"
}
local Races = {
    "Human",
    "Skypiean",
    "Namekian",
    "Dodoria's Race",
    "Burter's Race",
    "Saiyan",
    "Half-Saiyan",
    "Android",
    "Demon",
    "Angel (In Training)",
    "Cerealian",
    "Bojack Race"
}
Table2 = {}

for i, v in pairs(Table) do
    table.insert(Table2, v)
end

--real tables below

pcall(
    function()
        spawn(
            function()
                while wait(1) do
                    pcall(
                        function()
                            for i, v in pairs(game.Workspace:GetChildren()) do
                                if v:IsA("Part") and v.Name == "Part" then
                                    v:remove()
                                end
                            end
                        end
                    )
                end
            end
        )
        Quests = {}
        for i, v in pairs(game:GetService("ReplicatedStorage").Quests:GetChildren()) do
            table.insert(Quests, v.Name)
        end

        game:GetService("RunService").Stepped:connect(
            function()
                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 1000)
            end
        )
        code = {}
        for i, v in pairs(game:GetService("Players").LocalPlayer.Codes:GetDescendants()) do
            table.insert(code, v.Name)
        end
        Shop = {}
        for i, v in pairs(game:GetService("Workspace").Shop:GetChildren()) do
            table.insert(Shop, v.Name)
        end
        Mobs = {}
        for i, v in pairs(game:GetService("Workspace").Live:GetChildren()) do
            table.insert(Mobs, v.Name)
        end
        game:GetService("Workspace").QuestMarkers["Defeat 10 Kung Fu Masters"].Name = "Defeat 10 Kung fu Masters"
    end
)
Hentai = {}
for i, v in pairs(game:GetService("Workspace").Live:GetChildren()) do
    if
        v:FindFirstChild("Humanoid") and v:FindFirstChild("Quest") and v.Quest.Value == "Defeat 10 Thugs" and
            v.Name ~= "Thug (lvl. 5)"
     then
        table.insert(Hentai, v.Name)
    end
end

local OldNameCall = nil
OldNameCall =
    hookmetamethod(
    game,
    "__namecall",
    function(self, ...)
        local Args = {...}
        if self.Name == "DoubleExperienceTimerRemote" then
            return nil
        end
        return OldNameCall(self, unpack(Args))
    end
)

function c()
    
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v.ClassName == "Tool" and v:FindFirstChild("Combat Script") then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
        end
    end
end

local OldNameCall
OldNameCall =
    hookmetamethod(
    game,
    "__newindex",
    function(A, B, C)
        if (not checkcaller() and A.ClassName == "Humanoid" and (B == "WalkSpeed" or B == "JumpPower")) then
            return
        end
        return OldNameCall(A, B, C)
    end
)

game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50
game.Players.LocalPlayer.CharacterAdded:Connect(
    function()
        repeat
            wait()
        until game.Players.LocalPlayer.Character
        wait(3)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50
    end
)

local Part = Instance.new("Part", workspace)
Part.Name = "poopy"
Part.Size = Vector3.new(9e9, 0, 9e9)
Part.Anchored = true
Part.Transparency = 1

uu = 50
getgenv().delay2 = 0.2
getgenv().delay = 1
getgenv().name = "MagicMan1240"

local Vet = game:GetService("VirtualInputManager")
local huh = {"Strength", "Magic", "Endurance"}

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/im-retarded-3"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("dbz adventures unleashed")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("")
local Section2 = Tab1:CreateSection("")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")


local Toggle1 = Section1:CreateToggle("Auto Attack", nil, function(State)
w2 = State
while w2 do
    wait()
    game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false, nil, nil)
end
end)
local Toggle1 = Section1:CreateToggle("Auto Skills", nil, function(State)
for i, v in pairs({"E", "R", "C", "X", "Y", "V"}) do
    ee = State
    coroutine.wrap(function()--Credits for help/teaching me coroutine.wrap by nil#0001
            while ee do
                wait()
                Vet:SendKeyEvent(true, v, false, game)
            end
        end
    )()
end
end)
local Toggle1 = Section1:CreateToggle("No Trees", nil, function(State)
getgenv().Simp = State
for i, v in pairs(game:GetService("Workspace").dbzmap:GetDescendants()) do
    if v.Parent.Name:match("Tree") then
        if getgenv().Simp then
            v.Transparency = 1
            v.CanCollide = false
        else
            v.Transparency = 0
            v.CanCollide = true
        end
    end
end
end)




local Toggle1 = Section1:CreateToggle("Auto Quest", nil, function(State)
getgenv().System = State
game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().System then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
spawn(function()
while getgenv().System do
    wait()
    pcall(
        function()
            if getgenv().System then
                local Quest =
                    game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Menu"):WaitForChild(
                    "QuestFrame"
                )
                wait()
                for i, v in pairs(game:GetService("Workspace").Live:GetChildren()) do
                    if
                        v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Quest") and
                            v:WaitForChild("Quest").Value == Quest:WaitForChild("QuestName").Text and
                            v:FindFirstChildOfClass("Humanoid") and
                            v:FindFirstChildOfClass("Humanoid").Health ~= 0 and
                            not table.find(Hentai, v.Name)
                     then
                         
                        v:WaitForChild("HumanoidRootPart").CFrame =
                            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame *
                            CFrame.new(0, 0, -2)

                        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                            game:GetService("Workspace").QuestMarkers[Quest:WaitForChild("QuestName").Text].CFrame *
                            CFrame.new(0, -uu, 0)
                        Part.CFrame =
                            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame *
                            CFrame.new(0, -5, 0)
                            
                            
                         wait(1)
                        v:WaitForChild("Humanoid").Health = 0
                        
                        if
                            game.Players.LocalPlayer.Character.Humanoid.Health ~= 0 and
                                game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
                         then
                            c()
                        end
                    end
                end
                if Quest.Visible == false then
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Character
                    wait(3)
                    game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(
                        game:GetService("ReplicatedStorage").Quests:FindFirstChild(Quests)
                    )
                end
            elseif not getgenv().System then
                game.Players.LocalPlayer.Character.Humanoid.Health = 0
            end
        end
    )
end
end)
spawn(function()
while getgenv().System do
    wait()
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false, nil, nil)
end
end)
end)



local Dropdown1 = Section1:CreateDropdown("Select Quest")
Dropdown1:AddToolTip("Select Quest")
for i,v in next, Quests do
Dropdown1:AddOption(v, function(String)
Quests = String
end)
end
local Button1 = Section1:CreateButton("Time waits for noone.", function()
local Cooldown; Cooldown = hookfunction(wait, function(v)
    v = 0;
    return Cooldown(v);
end);
end)
local Toggle1 = Section1:CreateToggle("Auto Bosses", nil, function(State)
okdidntask = State

game:GetService("RunService").Stepped:connect(
    function()
        if okdidntask then
            pcall(function()
            Part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
            end)
        end
    end
)

spawn(function()
while okdidntask do
    pcall(
        function()
            wait()
            c()
            for i, v in pairs(game:GetService("Workspace").Live:GetChildren()) do
                if table.find(Hentai,v.Name) and v.Humanoid.Health ~= 0  and not v:FindFirstChildOfClass("ForceField")  then
          
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                    
                        v.HumanoidRootPart.CFrame * CFrame.new(0, -7, 3)
                        
                    wait(1)
                    v.Humanoid.Health = 0
               
                elseif not okdidntask then
                   game.Players.LocalPlayer.Character.Humanoid.Health = 0
                end
            end
        end
    )
end
end)
spawn(function()
while okdidntask do wait()
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false, nil, nil)
end end)
end)

local Dropdown1 = Section1:CreateDropdown("Select Boss")
Dropdown1:AddToolTip("Select Boss")
for i,v in next, Hentai do
Dropdown1:AddOption(v, function(String)
Hentai = String
end)
end

local Button1 = Section2:CreateButton("Find Lucky or Requiem Arrows", function()
getgenv().LOL = true
game:GetService("ReplicatedStorage").RemoteEvents.ClearInventoryRemote:FireServer()
wait(0.5)
while getgenv().LOL do
    wait()
    if #game.Players.LocalPlayer.Backpack:GetChildren() >= 20 then
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if not table.find(aka, v.Name) and v.Name:find("Arrow") then
                v.Parent = game.Players.LocalPlayer.Character
                v:Destroy()
            elseif v.Name:find("Arrow") and table.find(aka, v.Name) then
                game.StarterGui:SetCore(
                    "SendNotification",
                    {
                        Title = "Found One",
                        Text = "Check your inventory plz"
                    }
                )
                getgenv().LOL = false
            end
        end
    else
        game.ReplicatedStorage.RemoteEvents.BuyItemRemote:FireServer("Arrow")
    end
end
end)
local Button1 = Section2:CreateButton("Find Legendary Armor", function()
getgenv().LOL = true
game:GetService("ReplicatedStorage").RemoteEvents.ClearInventoryRemote:FireServer()
wait(0.5)
while getgenv().LOL do
    wait()
    pcall(
        function()
            game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Armor")
            if #game.Players.LocalPlayer.Backpack:GetChildren() >= 10 then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ClassName == "Tool" and v.Name == "Bag" and v:FindFirstChild("Handle") then
                        if v.BagPart.Overhead.Rarity.Text == "Legendary" then
                            v.Parent = game.Players.LocalPlayer.Character
                            game.StarterGui:SetCore(
                                "SendNotification",
                                {
                                    Title = "Found One",
                                    Text = "Check your inventory plz"
                                }
                            )
                            getgenv().LOL = false
                        elseif v.BagPart.Overhead.Rarity.Text == "Common" or v.BagPart.Overhead.Rarity.Text == "Rare" then
                            v.Parent = game.Players.LocalPlayer.Character
                            v:remove()
                        end
                    end
                end
            end
        end
    )
end
end)
local Button1 = Section2:CreateButton("Find Rare Armor", function()
getgenv().LOL = true
game:GetService("ReplicatedStorage").RemoteEvents.ClearInventoryRemote:FireServer()
wait(0.5)
while getgenv().LOL do
    wait()
    pcall(
        function()
            game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Armor")
            if #game.Players.LocalPlayer.Backpack:GetChildren() >= 10 then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ClassName == "Tool" and v.Name == "Bag" and v:FindFirstChild("Handle") then
                        if v.BagPart.Overhead.Rarity.Text == "Legendary" or v.BagPart.Overhead.Rarity.Text == "Rare" then
                            v.Parent = game.Players.LocalPlayer.Character
                            game.StarterGui:SetCore(
                                "SendNotification",
                                {
                                    Title = "Found One",
                                    Text = "Check your inventory plz"
                                }
                            )
                            getgenv().LOL = false
                        elseif v.BagPart.Overhead.Rarity.Text == "Common" then
                            v.Parent = game.Players.LocalPlayer.Character
                            v:remove()
                        end
                    end
                end
            end
        end
    )
end
end)


local Button1 = Section2:CreateButton("Stop Finding", function()
getgenv().LOL = false
end)
local Slider2 = Section2:CreateSlider("Auto Stuff Wait time", 0,7,nil,false, function(Value)
   getgenv().delay = Value
end)

local Toggle1 = Section2:CreateToggle("Auto Ability 1", nil, function(State)
Abily = State
while Abily do
    wait(2)
    pcall(
        function()
            if game.Players.LocalPlayer.PlayerValues.Ability.Value ~= Table then
                wait(getgenv().delay)
                game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Arrow")
                game:GetService("ReplicatedStorage").RemoteEvents.MovesetSelectorRemote:FireServer("Moveset1")

                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Arrow)
                game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer()
                wait(getgenv().delay)
            end
        end
    )
end
end)

local Dropdown1 = Section2:CreateDropdown("Select Abilty Slot 1")
Dropdown1:AddToolTip("Select Abilty Slot 1")
for i,v in next, Table do
Dropdown1:AddOption(v, function(String)
Table = String
end)
end

local Toggle1 = Section2:CreateToggle("Auto Ability 2", nil, function(State)
Abily2 = State
while Abily2 do
    wait(2)
    pcall(
        function()
            if game.Players.LocalPlayer.PlayerValues.Ability2.Value ~= Table2 then
                wait(getgenv().delay)
                game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Arrow")
                game:GetService("ReplicatedStorage").RemoteEvents.MovesetSelectorRemote:FireServer("Moveset2")
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Arrow)
                game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer()
                wait(getgenv().delay)
            end
        end
    )
end
end)




local Dropdown1 = Section2:CreateDropdown("Select Abilty Slot 2")
Dropdown1:AddToolTip("Select Abilty Slot 2")
for i,v in next, Table2 do
Dropdown1:AddOption(v, function(String)
Table2 = String
end)
end

local Toggle1 = Section2:CreateToggle("Auto Race", nil, function(State)
Heart = State
while Heart do
    wait(getgenv().delay)
    pcall(
        function()
            if game.Players.LocalPlayer.PlayerValues.Race.Value ~= Races then
                if not game.Players.LocalPlayer.Backpack:FindFirstChild("Heart") then
                    game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Heart")
                end
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Heart)
                game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer()
            end
        end
    )
end

end)

local Dropdown1 = Section2:CreateDropdown("Select Race")
Dropdown1:AddToolTip("Select Race")
for i,v in next, Races do
Dropdown1:AddOption(v, function(String)
Races = String
end)
end


local Toggle1 = Section2:CreateToggle("Streamer Mode", nil, function(State)
getgenv().R = State
getgenv().d = "ImNumNums"
for i, v in next, game:GetDescendants() do
    if v.ClassName == "TextLabel" and getgenv().R then
        if string.find(v.Text, game.Players.LocalPlayer.Name) then
            v.Text = v.Text:gsub(game.Players.LocalPlayer.Name, d)
        end
        v:GetPropertyChangedSignal("Text"):Connect(
            function()
                v.Text = v.Text:gsub(game.Players.LocalPlayer.Name, d)
            end
        )
    end
end

game.DescendantAdded:Connect(
    function(v)
        if v.ClassName == "TextLabel" and getgenv().R then
            v:GetPropertyChangedSignal("Text"):Connect(
                function()
                    v.Text = v.Text:gsub(game.Players.LocalPlayer.Name, d)
                end
            )
            if string.find(v.Text, game.Players.LocalPlayer.Name) then
                v.Text = v.Text:gsub(game.Players.LocalPlayer.Name, d)
            end
        end
    end
)

end)
local Toggle1 = Section1:CreateToggle("GodMode", nil, function(State)
god = State
game:GetService("RunService").Stepped:connect(
    function()
        if game.Players.LocalPlayer.Character:WaitForChild("CharacterValues"):FindFirstChild("DamageDivider") then
            if god then
                pcall(
                    function()
                        game.Players.LocalPlayer.Character:WaitForChild("CharacterValues"):WaitForChild("DamageDivider"):remove(

                        )
                    end
                )
            end
        end
    end
)
if not god then
    game.Players.LocalPlayer.Character.Humanoid.Health = 0
end
end)

local Toggle1 = Section1:CreateToggle("StatusImmune", nil, function(State)
gods = State
game:GetService("RunService").Stepped:connect(function()
pcall(function()
        if game.Players.LocalPlayer.Character.CharacterValues:FindFirstChild("StatusImmune") then
            if gods then
                game.Players.LocalPlayer.Character.CharacterValues.StatusImmune:remove()
            end
        end
        end)
    end
)
if not gods then
    game.Players.LocalPlayer.Character.Humanoid.Health = 0
end
end)
Toggle1:AddToolTip("Makes your StatusImmune to any stun attack such as fire etc")
local Toggle1 = Section1:CreateToggle("No CooldownReduction", nil, function(State)
nocool = State
while wait() do
    wait()
    if nocool then
        game:GetService("Players").LocalPlayer.PlayerValues.CooldownReduction.Value = -9e9
    else
        game:GetService("Players").LocalPlayer.PlayerValues.CooldownReduction.Value = 1
    end
end
end)
Toggle1:AddToolTip("Makes Abilitys have no anmation Cooldown")

local Button1 = Section1:CreateButton("Anti Effects", function()
pcall(
    function()
        game.StarterGui:SetCore(
            "SendNotification",
            {
                Title = "Effects Gone",
                Text = "Try one of your gay ugly weak moves unless you use *** then u cool"
            }
        )
        game:GetService("Workspace").Effects:remove()
    end
)
end)
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/Karrot-Esp"))()
local Esp = Section1:CreateToggle("Esp", nil, function(State)
ESP:Toggle(State)
ESP.Tracers = State
ESP.Names = State
ESP.Boxes = State
end)
local Toggle1 = Section1:CreateToggle("Anti Leveling", nil, function(State)
yes = State
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(...)
    local Args = {...}
    local Self = Args[1]
    if getnamecallmethod()== "FireServer" and tostring(Self)== "LevelingRemote" and yes then
            return nil
    end
    return OldNameCall(...)
end)
end)
Toggle1:AddToolTip("Makes you not able to level up")


local Slider2 = Section1:CreateSlider("Attack Distance", 0,100,nil,false, function(Value)
uu = Value
end)
local Slider2 = Section1:CreateSlider("AutoFarm Speed", 0,7,nil,false, function(Value)
getgenv().delay2 = Value
end)
local Button1 = Section1:CreateButton("Redeem Selected Code", function()
game:GetService("ReplicatedStorage").RemoteEvents.CodeRemote:FireServer(code)
end)
local Dropdown1 = Section1:CreateDropdown("Select Code")
Dropdown1:AddToolTip("Select Code")
for i,v in next, code do
Dropdown1:AddOption(v, function(String)
code = String
end)
end
local Button1 = Section1:CreateButton("Redeem All Codes", function()
for i, v in pairs(game:GetService("Players").LocalPlayer.Codes:GetDescendants()) do
    game:GetService("ReplicatedStorage").RemoteEvents.CodeRemote:FireServer(v.Name)
end
end)
local TextBox1 = Section2:CreateTextBox("Fps Cap", "Only numbers", true, function(Value)
    getgenv().Fps = Value
    pcall(function()
setfpscap(getgenv().Fps)
end)
end)

local TextBox1 = Section2:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)
local TextBox1 = Section2:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)



local Toggle1 = Section2:CreateToggle("Infinite Jump", nil, function(State)
Infinite = State
game:GetService("UserInputService").JumpRequest:connect(function()
	if Infinite then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end) end)

local words = {"V.G Hub Best","Autofarming with V.G hub makes this game ten times easier","DekuDimz is so cool fast updates ez",'V.G Hub has the only working godmode','im pround to be using V.G Hub OwO','why are you just standing around get yourself V.G hub its free dude','Honestly if your not using godmode your a dork','Random messging is funny','i have auto chat enabled LOL',
'V.G Hub Winning','V.G Hub on Top'
}
local Toggle1 = Section2:CreateToggle("Spam Chat", nil, function(State)
words1 = State
while words1 do wait(5)
game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(words[math.random(#words)],"All")
end end)
local Toggle1 = Section2:CreateToggle("Be Wired", nil, function(State)
sy = State
spawn(function()
while sy do wait()
pcall(function()
game.Players.LocalPlayer.Character["Left Leg"]:remove()
game.Players.LocalPlayer.Character["Left Arm"]:remove()
game.Players.LocalPlayer.Character["Right Arm"]:remove()
game.Players.LocalPlayer.Character["Right Leg"]:remove() end) end end) end)

local Toggle1 = Section2:CreateToggle("SS Jump Mobs", nil, function(State)
deeznuts = State
while deeznuts do
    wait(1)
    for i, v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
        if v:IsA("Humanoid") then
            v.Jump = true
        end
    end
end
end)
local Toggle1 = Section2:CreateToggle("SS Sit Mobs", nil, function(State)
deeznuts1 = State
while deeznuts1 do
    wait(1)
    for i, v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
        if v:IsA("Humanoid") then
            v.Sit = true
        end
    end
end
end)
local Toggle1 = Section2:CreateToggle("G Noclip", nil, function(State)
sex = State
noclip = false
game:GetService("RunService").Stepped:connect(
    function()
        if noclip then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end
)
mouse = game.Players.LocalPlayer:GetMouse()
game.Players.LocalPlayer:GetMouse().KeyDown:connect(
    function(v)
        if v == "g" then
            if sex then
                noclip = not noclip
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
            end
        end
    end
)
end)
local Toggle1 = Section2:CreateToggle("B Fly", nil, function(State)
sex2 = State
local Max = 0
local Players = game.Players
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
Mouse.KeyDown:connect(
    function(k)
        if k:lower() == "b" then
            Max = Max + 1
            getgenv().Fly = false
            if sex2 then
                local T = LP.Character.Torso
                local S = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local S2 = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local SPEED = 5
                local function FLY()
                    getgenv().Fly = true
                    local BodyGyro = Instance.new("BodyGyro", T)
                    local BodyVelocity = Instance.new("BodyVelocity", T)
                    BodyGyro.P = 9e4
                    BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    BodyGyro.cframe = T.CFrame
                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                    BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
                    spawn(
                        function()
                            repeat
                                wait()
                                LP.Character.Humanoid.PlatformStand = false
                                if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
                                    SPEED = 200
                                elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
                                    SPEED = 0
                                end
                                if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
                                    BodyVelocity.velocity =
                                        ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) +
                                        ((game.Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) -
                                            game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                    S2 = {
                                        F = S.F,
                                        B = S.B,
                                        L = S.L,
                                        R = S.R
                                    }
                                elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
                                    BodyVelocity.velocity =
                                        ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) +
                                        ((game.Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) -
                                            game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                else
                                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                                end
                                BodyGyro.cframe = game.Workspace.CurrentCamera.CoordinateFrame
                            until not getgenv().Fly
                            S = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            S2 = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            SPEED = 0
                            BodyGyro:destroy()
                            BodyVelocity:destroy()
                            LP.Character.Humanoid.PlatformStand = false
                        end
                    )
                end
                Mouse.KeyDown:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 1
                        elseif k:lower() == "s" then
                            S.B = -1
                        elseif k:lower() == "a" then
                            S.L = -1
                        elseif k:lower() == "d" then
                            S.R = 1
                        end
                    end
                )
                Mouse.KeyUp:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 0
                        elseif k:lower() == "s" then
                            S.B = 0
                        elseif k:lower() == "a" then
                            S.L = 0
                        elseif k:lower() == "d" then
                            S.R = 0
                        end
                    end
                )
                FLY()
                if Max == 2 then
                    getgenv().Fly = false
                    Max = 0
                end
            end
        end
    end
)
end)
local Button1 = Section2:CreateButton("Anti Lag", function()
for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
        v.Material = Enum.Material.SmoothPlastic
        if v:IsA("Texture") then
            v:Destroy()
        end
    end
end
end)

local Button1 = Section2:CreateButton("Teleport to RandomPlayer", function()
local randomPlayer = game.Players:GetPlayers()[math.random(1, #game.Players:GetPlayers())]

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
    CFrame.new(
    Vector3.new(
        randomPlayer.Character.Head.Position.X,
        randomPlayer.Character.Head.Position.Y,
        randomPlayer.Character.Head.Position.Z
    )
)
end)
local Button1 = Section2:CreateButton("Lag Switch F3", function()
local ass = false
local bitch = settings()

game:service "UserInputService".InputEnded:connect(
    function(i)
        if i.KeyCode == Enum.KeyCode.F3 then
            ass = not ass
            bitch.Network.IncomingReplicationLag = ass and 10 or 0
        end
    end
)
 end) 
local Button1 = Section2:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end)
local Button1 = Section2:CreateButton("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer) end)

local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
Section3:CreateLabel("Credits DekuDimz#7960")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
Section3:CreateLabel("Credits The3Bakers")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)
-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image")
local Option7 = Dropdown3:AddOption("Default", function(String)
	Window:SetBackground("2151741365")
end)
local Option8 = Dropdown3:AddOption("Hearts", function(String)
	Window:SetBackground("6073763717")
end)
local Option9 = Dropdown3:AddOption("Abstract", function(String)
	Window:SetBackground("6073743871")
end)
local Option10 = Dropdown3:AddOption("Hexagon", function(String)
	Window:SetBackground("6073628839")
end)
local Option11 = Dropdown3:AddOption("Circles", function(String)
	Window:SetBackground("6071579801")
end)
local Option12 = Dropdown3:AddOption("Lace With Flowers", function(String)
	Window:SetBackground("6071575925")
end)
local Option13 = Dropdown3:AddOption("Floral", function(String)
	Window:SetBackground("5553946656")
end)
Option7:SetOption()

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)
