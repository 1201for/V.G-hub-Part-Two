local Config = {
    WindowName = "V.G Hub",
	Color = Color3.fromRGB(255,128,64),
	Keybind = Enum.KeyCode.RightControl
}
repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
local Meta = getrawmetatable(game)
local NewIndex = Meta.__newindex
setreadonly(Meta, false)

Meta.__newindex = newcclosure(function(t, k, ...)
   if not checkcaller() and (k == "WalkSpeed" or k == "JumpPower") then
       return
   end
   NewIndex(t, k, ...)
end)
setreadonly(Meta, true)
uu = 4
aa = 0
getgenv().delay = 2
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50
game:GetService('RunService').Stepped:connect(function()
pcall(function()
if game.Players.LocalPlayer.Character.Head:FindFirstChild('Overhead') then
game.Players.LocalPlayer.Character.Head.Overhead:remove()
end end) end)

function c()
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and  v:FindFirstChild("Combat Script") then 
v.Parent = game.Players.LocalPlayer.Character
end
end
end
code = {}
for i,v in pairs(game:GetService("Players").LocalPlayer.Codes:GetDescendants()) do
table.insert(code,v.Name)
end
spawn(function()
game:GetService('RunService').Stepped:connect(function() 
pcall(function()
sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 1000)
end) end) end)
ab1={"Blaze",'Fire Breath','Sound Breathing','Insect Breathing','Voice','Sleep-Inducing Gas',"Simon's Dark Magic",'Purple Flare','Blazing Knight','Burning Spear','Shock Fist','Ittoryu; Wado Ichimonji','Ittoryu; Shusui','Black Leg Style','Moku Moku no mi','Pika Pika no mi','Kage Kage no mi','Mera Mera no mi','Cremation','Electrification','Gura Gura no mi','Goro Goro no mi','Yami Yami no mi','Determined Defender Goku',"Yami's Dark Magic",'The Trump Card Goku','Explosive Super Elite Vegeta','Magma Knight','Scorching Spear','Bolt Master','Diable Jambe'
}

ab2={'Nagi Nagi no mi v1','Flashstep','Nagi Nagi no mi v2','Suke Suke no mi v1','Sonido','Danger Sense v1','Danger Sense v2','Hirenkyaku'
}

ab3={'Ashen Mage','Ash Crow','Berserker','Black Foot','Black Swordsman','Cotton Candy Lover','Cat Burglar','Cyborg','Devils Child','Demon God','Falcon of Light','Fire Fist','Falcon of Darkness','flamingo lord','God of Calamity','God','He Who is Above God','Iron Man','Iron Mace','King of The Sea','Knight of the Sea','Loan Shark','Nobody','One Piecee','Pirate Hunter','Slug Baron','Symbol of Evil','Shiva','Soul King',"Struggler",'Straw Hat','The Beast Tamer','The Forbidden One','Thunder Emperor','The Acrobat','White Falcon','God of Destruction'
}

ab4={'Human',"Ghoul","Namekian",'Kumate Tribe','Spypiean','Torino Tribe','Vermin','A Bizarre Human','Human (Hybrid)',"Mink",'Celestial Dragon','Frieza Race','Fanalis','Uzumaki Clan','Saiyan'
}

ab5={'Hisashi Midoriya','Cain Barzad','Present Mic','Ace','Enel','Whitebeard','Dabi','Gecko Moria'
}

ab6={'Potency','Resilience','Speed','Angry','Balanced','Brave','Brute','Compassionate','Courageous','Fighter','Fragile','Humble','Hypersonic','Indestructible','Inspiring','Legendary','Light','Mighty','Muscular','Noble','Paranoid','Patient','Perfect','Powerful','Quick','Resilient','Sensitive','Slim','Slow','Slugger','Speedy','Strong','Tank','Tough','Useless','Valiant','Weak'
}

ab7={'Bruiser','Scrapper','Infiltrator','Tactician','Blaster'
}

ab8={'Hunter Snow Cap','Paper Hat','Du-rag','Ski Cap','Straw Hat','White Du-rag','Dark Hood','Bamboo Hat','Fancy Black Cowboy Hat','Snake Slate Hood','Socialite Hat','The Eliminator Hood','Ruby Adorned Fencer Helmet','Triple Threat Helmet','Yellow Banded Top Hat','Green Banded Top Hat','Purple Banded Top Hat','Blue Banded Top Hat','Bathysphere','Bluesteel Bathysphere','Bucket',"Bandit's Mask",'Black Ninja Headband','Black Round Glasses','Crimson Winter Scarf','Dust Mask','Eyepatch','Purple Pirate Headband','Rose Colored Glasses','Round Glasses','Shredded Bandit Mask','White Ninja Headband',                                                                 
}

ab10={'One Tomoe Sharingan','Two Tomoe Sharingan','Three Tomoe Sharingan',"Izuna's Mangekyo Sharingan v1","Indra's Mangekyo Sharingan v1","Sasuke's Mangekyo Sharingan v2","Obito's Mangekyo Sharingan v1","Itachi's Mangekyou Sharingan v1","Itachi's Mangekyo Sharingan v2","Madara's Mangekyo Sharingan v1","Madara's Mangekyo Sharingan v2","Obito's Mangekyo sharingan v2"
}

ab9={'Black Knight Armor','Blue Knight Armor',"Bounty Hunter's Gambeson",'Carta Assassin Armor',"Disciple's Armor",'Elite Mercenary Coat','Enchanter Robes','Fancy Suit','Griffon Plate','Heavy Adventurer Armor',"Innkeeper's Attire",'Iron Armor','Leather Armor','Mercenary Coat',"Nalthur's Armor","Oathbreaker's Armor","Pirate Hunter's Starter Outfit","Pirate's Outfit","Rice Farmer's Outfit",'Squire Armor','Rugged Adventurer Armor','Steel Armor',"Superior Battlemaster Coat","Superior Battlemaster Armor","Superior Battlemaster Mail","Superior Enchanter Coat",'Superior Vanguard Armor',"Templar Commander Armor",'Titanium Armor',"Vanguard Armor","Wizard Robes","Ancient Empyrean Armor","Ash Trap Mage's Outfit","Usopp's Pre Time-Skip Outfit","Franky's Outfit","Buggy's Outfit","Enel's Outfit","Enel's Outfit 2","Blackbeard's Outfit","Blackbeard's Outfit 2","Kidd's Outfit","UA Student's Outfit","The Almighty's Outfit","Muken Aizen's Outfit","Jiren's Outfit","Overhaul's Outfit","Usopp's Post Time-Skip Outfit","Magellan's Outfit","Black Foot's Outfit","Luffy's Marineford Outfit","Crocodile's Pre Time-Skip Outfit","Prime Whitebeard's Outfit","Sanji's Post Time-Skip Outfit","Kaido's Outfit","Kaido's Outfit 2","Dragon's Outfit"}
aka={"Requiem Arrow","Lucky Arrow"}
system = {'Bandit',"Agni's Overseer","Agni's Minion","Lars' Minion","Lars' Overseer","Rahgan's Minion","Rahgan's Overseer"}
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/im-retarded-3"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("Project XL")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("AutoFarms")
local Section2 = Tab1:CreateSection("Auto Stuff")
local SectionA = Tab1:CreateSection("Misc")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")

local Toggle1 = Section1:CreateToggle("Auto Attack", nil, function(State)
w2 = State
while w2 do wait()
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
end end)
local Toggle1 = Section1:CreateToggle("Auto Skills", nil, function(State)
for i,v in pairs({'E','R','C','X','Y',"V"}) do 
ee = State
coroutine.wrap(function() --Credits for help/teaching me coroutine.wrap by nil#0001
while ee do  wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,v,false,uwu)

end 
end)()
end end)
local Toggle1 = Section1:CreateToggle("Auto Dummy", nil, function(State)
yourdumb = State
game:GetService('RunService').Stepped:connect(function()
if yourdumb then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end)
end end)
while yourdumb do wait()
pcall(function()
   
c() wait(0.5)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Live["Training dummy"].Torso.CFrame * CFrame.new(-7,0,0) *CFrame.Angles(aa,0,0)
if not yourdumb then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SafeZoneIndicator.CFrame
end

end) end end)

local Toggle1 = Section1:CreateToggle("Legit Mode", nil, function(State)
Legit = State
game:GetService('RunService').Stepped:connect(function() pcall(function()
if Legit then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end end) end)
spawn(function()
while Legit do wait()
pcall(function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2846, 334, 2919)
game:GetService("VirtualUser"):ClickButton1(Vector2.new(9e9,9e9))
end)
end end)
c()
game.Players.LocalPlayer.Backpack.ChildAdded:Connect(function()
pcall(function()
if Legit then
wait(3)
c()

end
end)
end)
end)
local Toggle1 = Section1:CreateToggle("Anti Leveling", nil, function(State)
yes = State
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(...)
    local Args = {...}
    local Self = Args[1]
    if getnamecallmethod()== "FireServer" and tostring(Self)== "LevelingRemote" and yes then
            return wait(math.huge)
    end
    return OldNameCall(...)
end)
end)
Toggle1:AddToolTip("Makes you not able to level up")
local Toggle1 = Section1:CreateToggle("Auto Mob", nil, function(State)
system2 =State
game:GetService('RunService').Stepped:connect(function() pcall(function()
if system2 then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end end) end)
c()
spawn(function()
while system2 do wait()
pcall(function()

for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == system and v:FindFirstChildOfClass("Humanoid") and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(aa,0,0)
wait(0.3)
c()
wait(0.3)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
wait(0.3)
v.Humanoid.Health = 0 wait(.2)
end
end
end)
end 
end)
game:GetService('RunService').Stepped:connect(function()
pcall(function()
if system2 then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end end) end)
end)

local Dropdown1 = Section1:CreateDropdown("Select Mob")
Dropdown1:AddToolTip("Select Mob")
for i,v in next, system do
Dropdown1:AddOption(v, function(String)
system = String
end)
end
local Button1 = Section1:CreateButton("Anti Effects", function()
pcall(function()
game.StarterGui:SetCore("SendNotification", {
Title = "Effects Gone";
Text = "Try one of your gay ugly weak moves unless you use OFA then u cool";
})
game:GetService("Workspace").Effects:remove() end) end)
local Slider2 = Section1:CreateSlider("Attack Distance", 0,7,nil,false, function(Value)
uu = Value
end)
local Slider2 = Section1:CreateSlider("Attack Angle", 0,360,nil,false, function(Value)
aa = Value
end)

local Button1 = Section1:CreateButton("Redeem Selected Code", function()
game:GetService("ReplicatedStorage").RemoteEvents.CodeRemote:FireServer(code)
end)
local Dropdown1 = Section1:CreateDropdown("Select Code")
Dropdown1:AddToolTip("Select Code")
for i,v in next, code do
Dropdown1:AddOption(v, function(String)
code = String
end)
end
local Button1 = Section1:CreateButton("Redeem All Codes", function()
for i,v in pairs(game:GetService("Players").LocalPlayer.Codes:GetDescendants()) do
game:GetService("ReplicatedStorage").RemoteEvents.CodeRemote:FireServer(v.Name)
end
end)
local Toggle1 = Section1:CreateToggle("Stun All Mobs", nil, function(State)
stun = State
while wait(2) do
pcall(function()
if stun then
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:FindFirstChild("Humanoid") then
v.Humanoid.PlatformStand = true
end end end end) end end)
local Toggle1 = Section1:CreateToggle("Auto Bosses", nil, function(State)
system3 = State
spawn(function()
game:GetService('RunService').Stepped:connect(function()
if system3 then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end end)

while system3 do wait()
pcall(function()
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == "KiddStan" or v.Name == "CrimsonMikami" and v:FindFirstChildOfClass("Humanoid")  and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(aa,0,0)
wait(0.3)
c()
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
end
end
end)  
end  end)
end)



local Label1 = Section1:CreateLabel("Auto Quests")
local Toggle1 = Section1:CreateToggle("Defeat 10 Bandits", nil, function(State)
Ban = State
game:GetService('RunService').Stepped:connect(function()
if Ban then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11) end)
end end)
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"Kaji")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 10 Bandits"))
while Ban do wait()
pcall(function()
repeat wait()
if game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == true then
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == 'Bandit'  and v:FindFirstChildOfClass("Humanoid")  and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(0,aa,0)
wait(0.3)
c()
wait(0.3)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
wait(0.3)
v.Humanoid.Health = 0 wait(.2)
end end 
if Ban == false then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SafeZoneIndicator.CFrame *CFrame.new(0,5,0)
game:GetService("ReplicatedStorage").RemoteEvents.ClearQuestRemote:FireServer() end
end 
until game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == false wait()
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"Kaji")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 10 Bandits"))
end)
end
end)



local Toggle1 = Section1:CreateToggle("Defeat 9 of Agni's Minions", nil, function(State)
Ban7 = State
game:GetService('RunService').Stepped:connect(function()
if Ban7 then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11) end)
end end)
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"Laji")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 9 of Agni's Minions"))
while Ban7 do wait()
pcall(function()
repeat wait()
if game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == true then
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == "Agni's Minion"  and v:FindFirstChildOfClass("Humanoid")  and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(0,aa,0)
wait(0.3)
c()
wait(0.3)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
wait(0.3)
v.Humanoid.Health = 0 wait(.2)
end end 
if Ban7 == false then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SafeZoneIndicator.CFrame *CFrame.new(0,5,0)
game:GetService("ReplicatedStorage").RemoteEvents.ClearQuestRemote:FireServer() end
end 
until game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == false wait()
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"Laji")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 9 of Agni's Minions"))
end)
end
end)

local Toggle1 = Section1:CreateToggle("Defeat 8 of Lars' Minions", nil, function(State)
Ban1 = State
game:GetService('RunService').Stepped:connect(function()
if Ban1 then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11) end)
end end)
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"flamingo kaji")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 8 of Lars' Minions"))
while Ban1 do wait()
pcall(function()
repeat wait()
if game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == true then
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == "Lars' Minion" and v:FindFirstChildOfClass("Humanoid")  and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(0,aa,0)
wait(0.3)
c()
wait(0.3)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
wait(0.3)
v.Humanoid.Health = 0 wait(.2)
end end 
if Ban1 == false then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SafeZoneIndicator.CFrame *CFrame.new(0,5,0)
game:GetService("ReplicatedStorage").RemoteEvents.ClearQuestRemote:FireServer() end
end
until game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == false wait()
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"flamingo kaji")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 8 of Lars' Minions"))
end) 

end
end)


local Toggle1 = Section1:CreateToggle("Defeat 7 of Rahgan's Minions", nil, function(State)
Ban2 = State
game:GetService('RunService').Stepped:connect(function()
if Ban2 then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11) end)
end end)
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"MlgSteakStyle")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 7 of Rahgan's Minions"))
while Ban2 do wait()
pcall(function()
repeat wait()

if game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == true then
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == "Rahgan's Minion" and v:FindFirstChildOfClass("Humanoid")  and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(0,aa,0)
wait(0.3)
c()
wait(0.3)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
wait(0.3)
v.Humanoid.Health = 0 wait(.2)
end end 
if Ban2 == false then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SafeZoneIndicator.CFrame *CFrame.new(0,5,0)
game:GetService("ReplicatedStorage").RemoteEvents.ClearQuestRemote:FireServer() end
end
until game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == false wait()
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"MlgSteakStyle")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 7 of Rahgan's Minions"))
end) 

end
end)


local Toggle1 = Section1:CreateToggle("Defeat 6 of Agni's Overseers", nil, function(State)
Ban3 = State
game:GetService('RunService').Stepped:connect(function()
if Ban3 then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11) end)
end end)
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"pilgrism")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 6 of Agni's Overseers"))
while Ban3 do wait()
pcall(function()
repeat wait()
if game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == true then
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == "Agni's Overseer" and v:FindFirstChildOfClass("Humanoid")  and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(0,aa,0)
wait(0.3)
c()
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
wait(0.3)
v.Humanoid.Health = 0 wait(.2)
end end 
if Ban3 == false then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SafeZoneIndicator.CFrame *CFrame.new(0,5,0)
game:GetService("ReplicatedStorage").RemoteEvents.ClearQuestRemote:FireServer() end
end 
until game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == false wait()
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"pilgrism")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 6 of Agni's Overseers"))
end) 

end
end)


local Toggle1 = Section1:CreateToggle("Defeat 5 of Lars's Overseers", nil, function(State)
Ban4 = State
game:GetService('RunService').Stepped:connect(function()
if Ban4 then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11) end)
end end)
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"Aito")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 5 of Lars' Overseers"))
while Ban4 do wait()
pcall(function()
repeat wait()

game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,Vector3.new(0,0,0),CFrame.new(Vector3.new(0,0,0), Vector3.new(0,0,0)))

if game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == true then
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == "Lars' Overseer" and v:FindFirstChildOfClass("Humanoid")  and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(0,aa,0)
wait(0.3)
c()
wait(0.3)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
wait(0.3)
v.Humanoid.Health = 0 wait(.2)
end end 
if Ban4 == false then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SafeZoneIndicator.CFrame *CFrame.new(0,5,0)
game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible = false end
end 
until game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == false wait()
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer( game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"Aito")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 5 of Lars' Overseers"))
end) 
end
end)



local Toggle1 = Section1:CreateToggle("Defeat 4 of Rahgan's Overseers", nil, function(State)
Ban5 = State
game:GetService('RunService').Stepped:connect(function()
if Ban5 then
game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11) 
end end)
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"KINGKONGKINGGKONGGG")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 4 of Rahgan's Overseers"))
while Ban5 do wait()
pcall(function()
repeat wait()
if game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == true then
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Model") and v.Name == "Rahgan's Overseer"  and v:FindFirstChildOfClass("Humanoid")  and v.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Torso.CFrame  * CFrame.new(0,-uu,2) *CFrame.Angles(0,aa,0)
wait(0.3)
c()
wait(0.3)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
game:GetService("ReplicatedStorage").RemoteEvents.BladeCombatRemote:FireServer(false,nil,nil)
wait(0.3)
v.Humanoid.Health = 0 wait(.2)
end end 
if Ban5 == false then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SafeZoneIndicator.CFrame *CFrame.new(0,5,0)
game:GetService("ReplicatedStorage").RemoteEvents.ClearQuestRemote:FireServer() end
end 
until game:GetService("Players").LocalPlayer.PlayerGui.Menu.QuestFrame.Visible == false wait()
game:GetService("ReplicatedStorage").RemoteEvents.ChangeNpcValueRemote:FireServer(game:GetService("Players").LocalPlayer.PlayerValues.DialogNpc,"KINGKONGKINGGKONGGG")
game:GetService("ReplicatedStorage").RemoteEvents.ChangeQuestRemote:FireServer(game:GetService("ReplicatedStorage").Quests:FindFirstChild("Defeat 4 of Rahgan's Overseers"))
end)
end
end)


local Button1 = Section2:CreateButton("Find Lucky or Requiem Arrows", function()
hunt = true
game:GetService("ReplicatedStorage").RemoteEvents.ClearInventoryRemote:FireServer()
wait(0.5)
while  hunt do  wait()
if #game.Players.LocalPlayer.Backpack:GetChildren() >= 20 then 

for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if not table.find(aka,v.Name) and v.Name:find("Arrow") then 
v.Parent = game.Players.LocalPlayer.Character
v:Destroy()
elseif v.Name:find("Arrow") and table.find(aka,v.Name) then
game.StarterGui:SetCore("SendNotification", {
Title = "Found One";
Text = "Check your inventory plz";
})
hunt = false
end 
end
else 
game.ReplicatedStorage.RemoteEvents.BuyItemRemote:FireServer("Arrow")
end 

end
end)

local Button1 = Section2:CreateButton("Find Uchiha Eyeball", function()
hhg = true
game:GetService("ReplicatedStorage").RemoteEvents.ClearInventoryRemote:FireServer()
wait(0.5)
while hhg do wait()
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Specialization")
if #game.Players.LocalPlayer.Backpack:GetChildren() >= 10 then 
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v:FindFirstChild("Meshes/Sphere_009") then 
v.Parent = game.Players.LocalPlayer.Character 
game.StarterGui:SetCore("SendNotification", {
Title = "Found One";
Text = "Check your inventory plz";
})
hhg = false
end
end 
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v:FindFirstChild("Scroll") or v:FindFirstChild("Fruit") then 
v.Parent = game.Players.LocalPlayer.Character
v:remove()
end
end
end
end
end)
local Button1 = Section2:CreateButton("Find Legendary Armor", function()
hhfg = true
game:GetService("ReplicatedStorage").RemoteEvents.ClearInventoryRemote:FireServer()
wait(0.5)
while hhfg do wait()
pcall(function()
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Armor")
if #game.Players.LocalPlayer.Backpack:GetChildren() >= 10 then 
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v.Name == "Bag" and v:FindFirstChild("Handle") then 
if v.BagPart.Overhead.Rarity.Text == "Legendary" then
v.Parent = game.Players.LocalPlayer.Character 
game.StarterGui:SetCore("SendNotification", {
Title = "Found One";
Text = "Check your inventory plz";
})
hhfg = false
end
end 
end
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v.Name == "Bag" and v:FindFirstChild("Handle") then 
if v.BagPart.Overhead.Rarity.Text == "Common" or v.BagPart.Overhead.Rarity.Text == "Rare" then
v.Parent = game.Players.LocalPlayer.Character
v:remove()
end
end
end
end
end)
end
end)
local Button1 = Section2:CreateButton("Find Rare Armor", function()
hhfg = true
game:GetService("ReplicatedStorage").RemoteEvents.ClearInventoryRemote:FireServer()
wait(0.5)
while hhfg do wait()
pcall(function()
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Armor")
if #game.Players.LocalPlayer.Backpack:GetChildren() >= 10 then 
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v.Name == "Bag" and v:FindFirstChild("Handle") then 
if v.BagPart.Overhead.Rarity.Text == "Legendary" or v.BagPart.Overhead.Rarity.Text == "Rare" then
v.Parent = game.Players.LocalPlayer.Character 
game.StarterGui:SetCore("SendNotification", {
Title = "Found One";
Text = "Check your inventory plz";
})
hhfg = false
end
end 
end
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v.Name == "Bag" and v:FindFirstChild("Handle") then 
if v.BagPart.Overhead.Rarity.Text == "Common"  then
v.Parent = game.Players.LocalPlayer.Character
v:remove()
end
end
end
end
end)
end
end)
local Button1 = Section2:CreateButton("Find Rare Accessory", function()
hh1fg = true
game:GetService("ReplicatedStorage").RemoteEvents.ClearInventoryRemote:FireServer()
wait(0.5)
while hh1fg do wait()
pcall(function()
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Accessory")
if #game.Players.LocalPlayer.Backpack:GetChildren() >= 10 then 
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v.Name == "Bag" and v:FindFirstChild("Handle") then 
if v.BagPart.Overhead.Rarity.Text == "Legendary" or v.BagPart.Overhead.Rarity.Text == "Rare" then
v.Parent = game.Players.LocalPlayer.Character 
game.StarterGui:SetCore("SendNotification", {
Title = "Found One";
Text = "Check your inventory plz";
})
hh1fg = false
end
end 
end
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v.Name == "Bag" and v:FindFirstChild("Handle") then 
if v.BagPart.Overhead.Rarity.Text == "Common" or v.BagPart.Overhead.Rarity.Text == "Uncommon" then
v.Parent = game.Players.LocalPlayer.Character
v:remove()
end
end
end
end
end)
end
end)

local Slider2 = Section2:CreateSlider("Auto Stuff Wait time", 0,7,nil,false, function(Value)
getgenv().delay = Value
end)
Slider2:AddToolTip("Control Delay Time For Auto Applying everything below this")
local Toggle1 = Section2:CreateToggle("Auto Buy Arrows", nil, function(State)
deeznuts33 = State
while deeznuts33 do wait(0.3)
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Arrow") end end)
local Toggle1 = Section2:CreateToggle("Auto Ability", nil, function(State)
Abily = State
while Abily do wait(2)
pcall(function()
if game.Players.LocalPlayer.PlayerValues.Ability.Value ~= ab1 then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Rokakaka")
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Rokakaka)
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer()
wait(delay)
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Arrow")
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Arrow)
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer()
end
end)
end
end)

local Dropdown1 = Section2:CreateDropdown("Select Ability")
Dropdown1:AddToolTip("Select Ability")
for i,v in next, ab1 do
Dropdown1:AddOption(v, function(String)
ab1 = String
end)
end


local Toggle1 = Section2:CreateToggle("Auto Tile", nil, function(State)
newpaper = State
while newpaper do wait(getgenv().delay) pcall(function()
if game.Players.LocalPlayer.PlayerValues.Epithet.Value ~= ab3 then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Newspaper")
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Newspaper)
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer() end end) end end)


local Dropdown1 = Section2:CreateDropdown("Select Tile")
Dropdown1:AddToolTip("Select Tile")
for i,v in next, ab3 do
Dropdown1:AddOption(v, function(String)
ab3 = String
end)
end

local Toggle1 = Section2:CreateToggle("Auto Race", nil, function(State)
Heart = State
while Heart do wait(getgenv().delay) pcall(function()
if game.Players.LocalPlayer.PlayerValues.Race.Value  ~= ab4 then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Heart")
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Heart)
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer() end end) end end)



local Dropdown1 = Section2:CreateDropdown("Select Race")
Dropdown1:AddToolTip("Select Race")
for i,v in next, ab4 do
Dropdown1:AddOption(v, function(String)
ab4 = String
end)
end
local Toggle1 = Section2:CreateToggle("Auto Trait", nil, function(State)
Heart1 = State
while Heart1 do wait(getgenv().delay) pcall(function()
if game.Players.LocalPlayer.PlayerValues.Trait.Value ~= ab6 then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Eyeball")
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Eyeball)
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer() end end) end end)


local Dropdown1 = Section2:CreateDropdown("Select Trait")
Dropdown1:AddToolTip("Select Trait")
for i,v in next, ab6 do
Dropdown1:AddOption(v, function(String)
ab6 = String
end)
end 

local Toggle1 = Section2:CreateToggle("Auto Class", nil, function(State)
Heart2 = State
while Heart2 do wait(getgenv().delay) pcall(function()
if game.Players.LocalPlayer.PlayerValues.Class.Value ~= ab7 then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Brain")
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Brain)
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer() end end) end end)

local Dropdown1 = Section2:CreateDropdown("Select Class")
Dropdown1:AddToolTip("Select Class")
for i,v in next, ab7 do
Dropdown1:AddOption(v, function(String)
ab7 = String
end)
end 


local Toggle1 = Section2:CreateToggle("Auto Sharingan", nil, function(State)
Heart9 = State
while Heart9 do wait(getgenv().delay)
if game.Players.LocalPlayer.PlayerValues.Specialization.Value ~= ab10 then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Specialization")
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v:FindFirstChild("Meshes/Sphere_009") then 
v.Parent = game.Players.LocalPlayer.Character wait(1) 
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer()
end
end 
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v:FindFirstChild("Scroll") or v:FindFirstChild("Fruit") then 
v.Parent = game.Players.LocalPlayer,Character
v:remove()
end
end
end
end
end)

local Dropdown1 = Section2:CreateDropdown("Select Sharingan")
Dropdown1:AddToolTip("Select Sharingan")
for i,v in next, ab10 do
Dropdown1:AddOption(v, function(String)
ab10 = String
end)
end 

local Toggle1 = Section2:CreateToggle("Auto Specialization", nil, function(State)
Heart3 = State
while Heart3 do wait(getgenv().delay) pcall(function()
if game.Players.LocalPlayer.PlayerValues.Specialization.Value ~= ab2 then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Specialization")
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v:FindFirstChild("Scroll") or v:FindFirstChild("Fruit") then 
v.Parent = game.Players.LocalPlayer.Character
end
end
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer() end end) end end)

local Dropdown1 = Section2:CreateDropdown("Select Specialization")
Dropdown1:AddToolTip("Select Specialization")
for i,v in next, ab2 do
Dropdown1:AddOption(v, function(String)
ab2 = String
end)
end 

local Toggle1 = Section2:CreateToggle("Auto Mentor", nil, function(State)
Heart4 = State
while Heart4 do wait(getgenv().delay) pcall(function()
if game.Players.LocalPlayer.PlayerValues.Mentor.Value ~= ab5 then    
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Mentor")
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v:FindFirstChild("MentorEgg")  then 
v.Parent = game.Players.LocalPlayer.Character
end
end
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer() end end) end  end)


local Dropdown1 = Section2:CreateDropdown("Select Mentor")
Dropdown1:AddToolTip("Select Mentor")
for i,v in next, ab5 do
Dropdown1:AddOption(v, function(String)
ab5 = String
end)
end 


local Toggle1 = Section2:CreateToggle("Select Accessory1", nil, function(State)
Accessory1 = State
while Accessory1 do wait()
game:GetService("ReplicatedStorage").RemoteEvents.EquipAccessoryRemote:FireServer("Accessory1")
end end)
local Toggle1 = Section2:CreateToggle("Select Accessory2", nil, function(State)
Accessory2 = State
while Accessory2 do wait()
game:GetService("ReplicatedStorage").RemoteEvents.EquipAccessoryRemote:FireServer("Accessory2")
end end)
local Toggle1 = Section2:CreateToggle("Auto Accessory", nil, function(State)
Heart2 = State
while Heart2 do wait(getgenv().delay)
pcall(function()
if game:GetService("Players").LocalPlayer.PlayerValues.Accessory1.Value and game:GetService("Players").LocalPlayer.PlayerValues.Accessory2.Value ~= ab8  then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Accessory")
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v:FindFirstChild("BagPart")  then 
v.Parent = game.Players.LocalPlayer.Character
end
end
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer() end end)  end end)


local Dropdown1 = Section2:CreateDropdown("Select Accessory")
Dropdown1:AddToolTip("Select Accessory")
for i,v in next, ab8 do
Dropdown1:AddOption(v, function(String)
ab8 = String
end)
end 

local Toggle1 = Section2:CreateToggle("Auto Armor", nil, function(State)
Heart5 = State

while Heart5 do wait(getgenv().delay)
pcall(function()
if  game:GetService("Players").LocalPlayer.PlayerValues.Armor.Value ~= ab9 then
game:GetService("ReplicatedStorage").RemoteEvents.BuyItemRemote:FireServer("Random Armor")
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
if v.ClassName == "Tool" and v:FindFirstChild("Handle")  then 
v.Parent = game.Players.LocalPlayer.Character
end
end
game:GetService("ReplicatedStorage").RemoteEvents.ItemRemote:FireServer()end end)  end end)

local Dropdown1 = Section2:CreateDropdown("Select Armor")
Dropdown1:AddToolTip("Select Armor")
for i,v in next, ab9 do
Dropdown1:AddOption(v, function(String)
ab9 = String
end)
end 
local Label1 = Section2:CreateLabel("")
local Label1 = Section2:CreateLabel("")
local Label1 = Section2:CreateLabel("")
local TextBox1 = SectionA:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)
local TextBox1 = SectionA:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)
local Toggle1 = SectionA:CreateToggle("Infinite Jump", nil, function(State)
Infinite = State
game:GetService("UserInputService").JumpRequest:connect(function()
	if Infinite then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end) end)
local Toggle1 = SectionA:CreateToggle("Be Wired", nil, function(State)
sy = State
spawn(function()
while sy do wait()
pcall(function()
game.Players.LocalPlayer.Character["Left Leg"]:remove()
game.Players.LocalPlayer.Character["Left Arm"]:remove()
game.Players.LocalPlayer.Character["Right Arm"]:remove()
game.Players.LocalPlayer.Character["Right Leg"]:remove() end) end end) end)

local Toggle1 = SectionA:CreateToggle("SS Jump Mobs", nil, function(State)
deeznuts = State
while deeznuts do wait(1)
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Humanoid") then
v.Jump = true
end end end end)
local Toggle1 = SectionA:CreateToggle("SS Sit Mobs", nil, function(State)
deeznuts1 = State
while deeznuts1 do wait(1)
for i,v in pairs(game:GetService("Workspace").Live:GetDescendants()) do
if v:IsA("Humanoid") then
v.Sit = true
end end end end)
local Toggle1 = SectionA:CreateToggle("G Noclip", nil, function(State)
sex = State
noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "g" then
if sex then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end end 
end) end)
local Toggle1 = SectionA:CreateToggle("B Fly", nil, function(State)
sex2 = State
local gogo1000 = 0
local LP = game:service('Players').LocalPlayer
local MOUSE = LP:GetMouse()
MOUSE.KeyDown:connect(function(KEY)
if KEY:lower() == 'b' then
if sex2 then
local LP = game:service('Players').LocalPlayer
local MOUSE = LP:GetMouse()
gogo1000 = gogo1000 + 1
_G.FLYING = false
local T = LP.Character.Torso
local CONTROL = {F = 0, B = 0, L = 0, R = 0}
local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
local SPEED = 5
local function FLY()
_G.FLYING = true
local BG = Instance.new('BodyGyro', T)
local BV = Instance.new('BodyVelocity', T)
BG.P = 9e4
BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
BG.cframe = T.CFrame
BV.velocity = Vector3.new(0, 0.1, 0)
BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
spawn(function()
repeat wait()
LP.Character.Humanoid.PlatformStand = true
if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
SPEED = 50
elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
SPEED = 0
end
if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
else
BV.velocity = Vector3.new(0, 0.1, 0)
end
BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
until not _G.FLYING
CONTROL = {F = 0, B = 0, L = 0, R = 0}
lCONTROL = {F = 0, B = 0, L = 0, R = 0}
SPEED = 0
BG:destroy()
BV:destroy()
LP.Character.Humanoid.PlatformStand = false
end)
end
MOUSE.KeyDown:connect(function(KEY)
if KEY:lower() == 'w' then
CONTROL.F = 1
elseif KEY:lower() == 's' then
CONTROL.B = -1
elseif KEY:lower() == 'a' then
CONTROL.L = -1 
elseif KEY:lower() == 'd' then 
CONTROL.R = 1
end
end)
MOUSE.KeyUp:connect(function(KEY)
if KEY:lower() == 'w' then
CONTROL.F = 0
elseif KEY:lower() == 's' then
CONTROL.B = 0
elseif KEY:lower() == 'a' then
CONTROL.L = 0
elseif KEY:lower() == 'd' then
CONTROL.R = 0
end
end)
FLY()
if gogo1000 == 2 then
_G.FLYING = false
gogo1000 = 0
end
end
end
end) end)
local Button1 = SectionA:CreateButton("Anti Lag", function()
for _,v in pairs(game:GetService("Workspace"):GetDescendants()) do
if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then --- i stole this from the actual game LOL >-<
v.Material = Enum.Material.SmoothPlastic;
if v:IsA("Texture") then
v:Destroy();
end end;		
end;
end)

local Button1 = SectionA:CreateButton("Teleport to RandomPlayer", function()
local randomPlayer = game.Players:GetPlayers()
[math.random(1,#game.Players:GetPlayers())]

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z)) end)
local Button1 = SectionA:CreateButton("Lag Switch F3", function()
local a = false
local b = settings()

game:service'UserInputService'.InputEnded:connect(function(i)
if i.KeyCode == Enum.KeyCode.F3 then
a = not a
b.Network.IncomingReplicationLag = a and 10 or 0
end
end) end) 
local Button1 = SectionA:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end)
local Button1 = SectionA:CreateButton("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer) end)

local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
Section3:CreateLabel("Credits DekuDimz#7960")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
Section3:CreateLabel("Credits The3Bakers")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)
-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image")
local Option7 = Dropdown3:AddOption("Default", function(String)
	Window:SetBackground("2151741365")
end)
local Option8 = Dropdown3:AddOption("Hearts", function(String)
	Window:SetBackground("6073763717")
end)
local Option9 = Dropdown3:AddOption("Abstract", function(String)
	Window:SetBackground("6073743871")
end)
local Option10 = Dropdown3:AddOption("Hexagon", function(String)
	Window:SetBackground("6073628839")
end)
local Option11 = Dropdown3:AddOption("Circles", function(String)
	Window:SetBackground("6071579801")
end)
local Option12 = Dropdown3:AddOption("Lace With Flowers", function(String)
	Window:SetBackground("6071575925")
end)
local Option13 = Dropdown3:AddOption("Floral", function(String)
	Window:SetBackground("5553946656")
end)
Option7:SetOption()

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)
