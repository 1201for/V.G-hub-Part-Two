local Config = {
    WindowName = "V.G Hub",
	Color = Color3.fromRGB(255,128,64),
	Keybind = Enum.KeyCode.RightControl
}
repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

if game:GetService("Workspace"):FindFirstChild("Pumpkins") then
for i,v in pairs(game:GetService("Workspace").Pumpkins:GetChildren()) do
if v.ClassName == "Model" then
fireclickdetector(v.ClickDetector)
end end end

pcall(function()
for i,v in pairs(game:GetService("Workspace").SupplyDrops:GetChildren()) do
if v.ClassName == "Model" then
v:remove()
end end end)

local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(...)
    local Args = {...}
    local Self = Args[1]
    if getnamecallmethod()=="InvokeServer" and tostring(Self)=="ReturnData" then
            return wait(math.huge)
    end
    return OldNameCall(...)
end)


local Pool = {"1",'2',"3","4"}
local Safe = false 
local MaxBetEnabled = false 
local WaitingTime = 0.9

local SafetyAmount = 0

if Safe ~= true then
  SafetyAmount = 0
else
  SafetyAmount = 1500 
end

local function getTotal()
  local total = 0
 
  for i,v in next, game:GetService("Players").LocalPlayer.PlayerGui.Gui.Frames.Inventory.Body.Holder:GetChildren() do
      if v:IsA("Frame") and v:FindFirstChild("ItemValue") ~= nil then
          local s = string.split(v.ItemValue.Text, "$")
          local n = tonumber(s[2])
         
          if n then
              total = total + n
          end
      end
  end
 
  return total
end

local function fromSuffixString(s)
  local converted = 0
 
  if string.find(s, "K") then
      local s = string.split(s, 'K')
      local n = tonumber(s[1]) * 1000
     
      converted = n
  elseif string.find(s, "M") then
      local s = string.split(s, 'M')
      local n = tonumber(s[1]) * 1000000
     
      converted = n
  else
      converted = s
  end
 
  return tonumber(converted)
end

local function getRap(Match)
  local total = 0
 
  for i,v in next, Match:GetChildren() do
      if v.Name ~= game.Players.LocalPlayer.Name and v:IsA("Frame") and v:FindFirstChild("RAP") ~= nil then
          local s = string.split(v.RAP.Text, "$")
          local n = fromSuffixString(s[2])
         
          if n then
              total = total + n
          end
      end
  end
 
  return total
end

local function Attempt()
  local placed = 0
  local Total = getRap(game.Players.LocalPlayer.PlayerGui.Gui.Frames.Games.Jackpot.Pools[Pool].List)
  local RapTotal = getTotal()
 
  if Total ~= 0 and tonumber(Total) + SafetyAmount < tonumber(RapTotal) then
      game.StarterGui:SetCore("SendNotification", {
          Title = "Success",
          Text = "You have joined the pool "..Pool.." jackpot!"
      });
 
      for i,v in next, game:GetService("Players").LocalPlayer.PlayerGui.Gui.Frames.Inventory.Body.Holder:GetChildren() do
          if v:IsA("Frame") and v:FindFirstChild("ItemValue") then
              local Total2 = getRap(game.Players.LocalPlayer.PlayerGui.Gui.Frames.Games.Jackpot.Pools[Pool].List) 
              local RapTotal2 = getTotal()
              if MaxBetEnabled == true then
                  local s = string.split(v.ItemValue.Text, "$")
                  local n = fromSuffixString(s[2])
                  placed = placed + n
                 
                  if placed <= MaxBet and tonumber(Total2) + SafetyAmount < tonumber(RapTotal2) then
                      game:GetService("ReplicatedStorage").Events.GamesActions:InvokeServer("Jackpot", v.Name, 1, tonumber(Pool))
                  end
              else
                  if tonumber(Total2) + SafetyAmount < tonumber(RapTotal2) then
                      game:GetService("ReplicatedStorage").Events.GamesActions:InvokeServer("Jackpot", v.Name, 1, tonumber(Pool))
                  end
              end
          end
      end
  end
 
  placed = 0
end

local Cases = {"Starter","Noobie",'Learning','Business','Legendary','Marcellus','Famous','Myhic',
'Eirene','Aeschylus','Olysseus','Noobish','Rares','Big Bux','Prosperous'    
}

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/im-retarded-3"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("Trade Tower")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("AutoFarms")
local Section2 = Tab1:CreateSection("Misc")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")

local Toggle1 = Section1:CreateToggle("AutoClick", nil, function(State)
auto = State
while auto do wait()
game:GetService("ReplicatedStorage").Events.ClientClick:FireServer()
end end)

local Toggle1 = Section1:CreateToggle("Anti Afk", nil, function(State)
anti = State
while anti do wait(3)
game:GetService("ReplicatedStorage").Events.AFK:FireServer(false)
end 
end)
local Toggle1 = Section1:CreateToggle("AutoJackPot", nil, function(State)
Bet = State
while Bet do wait()
if string.find(string.lower(game:GetService("Players").LocalPlayer.PlayerGui.Gui.Frames.Games.Jackpot.Timer.Countdown.Text), "Time left to put in items: ") then
local s = string.split(game:GetService("Players").LocalPlayer.PlayerGui.Gui.Frames.Games.Jackpot.Timer.Countdown.Text, "Time left to put in items: ")
local currentTimer = tonumber(s[2])
if currentTimer == 1 then
wait(WaitingTime)
Attempt()
end
end
 end end)
local Label1 = Section1:CreateLabel("Selecting JackPot Required")
local Label1 = Section1:CreateLabel("For AutoJackPot")
local Dropdown1 = Section1:CreateDropdown("Select JackPot")
Dropdown1:AddToolTip("Select Between 1 = 250k Cap, 2 = 5M Cap, 3 = Inf Cap")
for i,v in next, Pool do
Dropdown1:AddOption(v, function(String)
Pool = String
end)
end 
MaxBet = 10000
local TextBox1 = Section1:CreateTextBox("MaxBet", "Only numbers", true, function(Value)
   MaxBet = Value
end)

local Toggle1 = Section1:CreateToggle("Auto Collect Drops", nil, function(State)
cas1e = State
while cas1e do wait()
pcall(function()
for i,v in pairs(game:GetService("Workspace").SupplyDrops:GetChildren()) do
if v.ClassName == "Model" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Touch.CFrame
end end  end) end 
end)
local Toggle1 = Section1:CreateToggle("AutoCase", nil, function(State)
case = State
while case do wait()
game:GetService("ReplicatedStorage").Events.OpenCase:InvokeServer(Cases)
end end)


local Dropdown1 = Section1:CreateDropdown("Select Case")
Dropdown1:AddToolTip("Select Case")
for i,v in next, Cases do
Dropdown1:AddOption(v, function(String)
Cases = String
end)
end 

local TextBox1 = Section2:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)
local TextBox1 = Section2:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)
local Toggle1 = Section2:CreateToggle("G Noclip", nil, function(State)
sex = State
noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "g" then
if sex then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end end 
end) end)
local Toggle1 = Section2:CreateToggle("B Fly", nil, function(State)
sex2 = State
local gogo1000 = 0
local LP = game:service('Players').LocalPlayer
local MOUSE = LP:GetMouse()
MOUSE.KeyDown:connect(function(KEY)
if KEY:lower() == 'b' then
if sex2 then
local LP = game:service('Players').LocalPlayer
local MOUSE = LP:GetMouse()
gogo1000 = gogo1000 + 1
_G.FLYING = false
local T = LP.Character.UpperTorso
local CONTROL = {F = 0, B = 0, L = 0, R = 0}
local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
local SPEED = 5
local function FLY()
_G.FLYING = true
local BG = Instance.new('BodyGyro', T)
local BV = Instance.new('BodyVelocity', T)
BG.P = 9e4
BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
BG.cframe = T.CFrame
BV.velocity = Vector3.new(0, 0.1, 0)
BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
spawn(function()
repeat wait()
LP.Character.Humanoid.PlatformStand = false
if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
SPEED = 300
elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
SPEED = 0
end
if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
else
BV.velocity = Vector3.new(0, 0.1, 0)
end
BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
until not _G.FLYING
CONTROL = {F = 0, B = 0, L = 0, R = 0}
lCONTROL = {F = 0, B = 0, L = 0, R = 0}
SPEED = 0
BG:destroy()
BV:destroy()
LP.Character.Humanoid.PlatformStand = false
end)
end
MOUSE.KeyDown:connect(function(KEY)
if KEY:lower() == 'w' then
CONTROL.F = 1
elseif KEY:lower() == 's' then
CONTROL.B = -1
elseif KEY:lower() == 'a' then
CONTROL.L = -1 
elseif KEY:lower() == 'd' then 
CONTROL.R = 1
end
end)
MOUSE.KeyUp:connect(function(KEY)
if KEY:lower() == 'w' then
CONTROL.F = 0
elseif KEY:lower() == 's' then
CONTROL.B = 0
elseif KEY:lower() == 'a' then
CONTROL.L = 0
elseif KEY:lower() == 'd' then
CONTROL.R = 0
end
end)
FLY()
if gogo1000 == 2 then
_G.FLYING = false
gogo1000 = 0
end
end
end
end) end)
local Button1 = Section2:CreateButton("Anti Lag", function()
for _,v in pairs(game:GetService("Workspace"):GetDescendants()) do
if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then 
v.Material = Enum.Material.SmoothPlastic;
if v:IsA("Texture") then
v:Destroy();
end end;		
end;
end)

local Button1 = Section2:CreateButton("Teleport to RandomPlayer", function()
local randomPlayer = game.Players:GetPlayers()
[math.random(1,#game.Players:GetPlayers())]

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z)) end)
local Button1 = Section2:CreateButton("Lag Switch F3", function()
local a = false
local b = settings()

game:service'UserInputService'.InputEnded:connect(function(i)
if i.KeyCode == Enum.KeyCode.F3 then
a = not a
b.Network.IncomingReplicationLag = a and 10 or 0
end
end) end) 
local Button1 = Section2:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end)
local Button1 = Section2:CreateButton("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer) end)


local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
Section3:CreateLabel("Credits DekuDimz#7960")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
Section3:CreateLabel("Credits scde")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)
-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image")
local Option7 = Dropdown3:AddOption("Default", function(String)
	Window:SetBackground("2151741365")
end)
local Option8 = Dropdown3:AddOption("Hearts", function(String)
	Window:SetBackground("6073763717")
end)
local Option9 = Dropdown3:AddOption("Abstract", function(String)
	Window:SetBackground("6073743871")
end)
local Option10 = Dropdown3:AddOption("Hexagon", function(String)
	Window:SetBackground("6073628839")
end)
local Option11 = Dropdown3:AddOption("Circles", function(String)
	Window:SetBackground("6071579801")
end)
local Option12 = Dropdown3:AddOption("Lace With Flowers", function(String)
	Window:SetBackground("6071575925")
end)
local Option13 = Dropdown3:AddOption("Floral", function(String)
	Window:SetBackground("5553946656")
end)
Option7:SetOption()

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)
